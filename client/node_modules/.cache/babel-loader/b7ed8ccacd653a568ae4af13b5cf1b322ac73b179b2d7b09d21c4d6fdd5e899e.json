{"ast":null,"code":"var _jsxFileName = \"/Users/shintinglin/Desktop/STL/Coding/CV generator/my-cover-letter-app/client/src/CoverLetterGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoverLetterGenerator = () => {\n  _s();\n  const [summary, setSummary] = useState('');\n  const [skills, setSkills] = useState('');\n  const [experience, setExperience] = useState('');\n  const [education, setEducation] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n  const [companyProducts, setCompanyProducts] = useState('');\n  const [generatedCoverLetter, setGeneratedCoverLetter] = useState('');\n  const [presets, setPresets] = useState([]);\n  const [selectedPreset, setSelectedPreset] = useState('');\n\n  // Load presets from local JSON file when component mounts\n  useEffect(() => {\n    const fetchPresets = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/presets.json');\n        console.log(await response.text());\n        const data = await response.json();\n        setPresets(data.presets);\n      } catch (error) {\n        console.error('Error loading presets:', error);\n      }\n    };\n    fetchPresets();\n  }, []);\n  const savePreset = () => {\n    const newPreset = {\n      summary,\n      skills,\n      experience,\n      education,\n      jobDescription,\n      companyProducts\n    };\n    setPresets([...presets, newPreset]);\n  };\n  const loadPreset = preset => {\n    setSummary(preset.summary);\n    setSkills(preset.skills);\n    setExperience(preset.experience);\n    setEducation(preset.education);\n    setJobDescription(preset.jobDescription);\n    setCompanyProducts(preset.companyProducts);\n  };\n  const generateCoverLetter = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/generate-cover-letter', {\n        summary,\n        skills,\n        experience,\n        education,\n        jobDescription,\n        companyProducts\n      });\n      const coverLetter = response.data.coverLetter.content;\n      console.log(coverLetter);\n      setGeneratedCoverLetter(coverLetter);\n    } catch (error) {\n      console.error('Error generating cover letter:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: summary,\n        onChange: e => setSummary(e.target.value),\n        placeholder: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: skills,\n        onChange: e => setSkills(e.target.value),\n        placeholder: \"Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Experience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: experience,\n        onChange: e => setExperience(e.target.value),\n        placeholder: \"Experience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Education\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: education,\n        onChange: e => setEducation(e.target.value),\n        placeholder: \"Education\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Job Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: jobDescription,\n        onChange: e => setJobDescription(e.target.value),\n        placeholder: \"Job Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Company Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: companyProducts,\n        onChange: e => setCompanyProducts(e.target.value),\n        placeholder: \"Company Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateCoverLetter,\n      children: \"Generate Cover Letter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: savePreset,\n      children: \"Save Preset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => {\n        setSelectedPreset(e.target.value);\n        loadPreset(JSON.parse(e.target.value));\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Preset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), presets.map((preset, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: JSON.stringify(preset),\n        children: [\"Preset \", index + 1]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: generatedCoverLetter && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Generated Cover Letter:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: generatedCoverLetter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(CoverLetterGenerator, \"v9hVxDI0cwOkcnV1nxQKQ1znOM4=\");\n_c = CoverLetterGenerator;\nexport default CoverLetterGenerator;\nvar _c;\n$RefreshReg$(_c, \"CoverLetterGenerator\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CoverLetterGenerator","_s","summary","setSummary","skills","setSkills","experience","setExperience","education","setEducation","jobDescription","setJobDescription","companyProducts","setCompanyProducts","generatedCoverLetter","setGeneratedCoverLetter","presets","setPresets","selectedPreset","setSelectedPreset","fetchPresets","response","fetch","console","log","text","data","json","error","savePreset","newPreset","loadPreset","preset","generateCoverLetter","post","coverLetter","content","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","JSON","parse","map","index","stringify","_c","$RefreshReg$"],"sources":["/Users/shintinglin/Desktop/STL/Coding/CV generator/my-cover-letter-app/client/src/CoverLetterGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CoverLetterGenerator = () => {\n  const [summary, setSummary] = useState('');\n  const [skills, setSkills] = useState('');\n  const [experience, setExperience] = useState('');\n  const [education, setEducation] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n  const [companyProducts, setCompanyProducts] = useState('');\n  const [generatedCoverLetter, setGeneratedCoverLetter] = useState('');\n  const [presets, setPresets] = useState([]);\n  const [selectedPreset, setSelectedPreset] = useState('');\n\n  // Load presets from local JSON file when component mounts\n  useEffect(() => {\n    const fetchPresets = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/presets.json');\n        console.log(await response.text())\n        const data = await response.json();\n        setPresets(data.presets);\n      } catch (error) {\n        console.error('Error loading presets:', error);\n      }\n    };\n\n    fetchPresets();\n  }, []);\n\n  const savePreset = () => {\n    const newPreset = {\n      summary,\n      skills,\n      experience,\n      education,\n      jobDescription,\n      companyProducts\n    };\n    setPresets([...presets, newPreset]);\n  };\n\n  const loadPreset = (preset) => {\n    setSummary(preset.summary);\n    setSkills(preset.skills);\n    setExperience(preset.experience);\n    setEducation(preset.education);\n    setJobDescription(preset.jobDescription);\n    setCompanyProducts(preset.companyProducts);\n  };\n\n  const generateCoverLetter = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/generate-cover-letter', {\n        summary,\n        skills,\n        experience,\n        education,\n        jobDescription,\n        companyProducts\n      });\n      const coverLetter = response.data.coverLetter.content;\n      console.log(coverLetter);\n      setGeneratedCoverLetter(coverLetter);\n    } catch (error) {\n      console.error('Error generating cover letter:', error);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        {/* 輸入摘要、技能、經驗、教育等信息 */}\n        {/* 範例： */}\n        <label>Summary</label>\n        <textarea value={summary} onChange={(e) => setSummary(e.target.value)} placeholder=\"Summary\" />\n        <label>Skills</label>\n        <textarea value={skills} onChange={(e) => setSkills(e.target.value)} placeholder=\"Skills\" />\n        <label>Experience</label>\n        <textarea value={experience} onChange={(e) => setExperience(e.target.value)} placeholder=\"Experience\" />\n        <label>Education</label>\n        <textarea value={education} onChange={(e) => setEducation(e.target.value)} placeholder=\"Education\" />\n      </div>\n      <div>\n        <label>Job Description</label>\n        <textarea value={jobDescription} onChange={(e) => setJobDescription(e.target.value)} placeholder=\"Job Description\" />\n        <label>Company Products</label>\n        <textarea value={companyProducts} onChange={(e) => setCompanyProducts(e.target.value)} placeholder=\"Company Products\" />\n      </div>\n      <button onClick={generateCoverLetter}>Generate Cover Letter</button>\n      <button onClick={savePreset}>Save Preset</button>\n      <select onChange={(e) => {\n        setSelectedPreset(e.target.value);\n        loadPreset(JSON.parse(e.target.value));\n      }}>\n        <option value=\"\">Select Preset</option>\n        {presets.map((preset, index) => (\n          <option key={index} value={JSON.stringify(preset)}>Preset {index + 1}</option>\n        ))}\n      </select>\n      <div>\n        {/* Display the generated cover letter */}\n        {generatedCoverLetter && (\n          <div>\n            <h2>Generated Cover Letter:</h2>\n            <p>{generatedCoverLetter}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CoverLetterGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACmB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMwB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAClEC,OAAO,CAACC,GAAG,CAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;QAClC,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCV,UAAU,CAACS,IAAI,CAACV,OAAO,CAAC;MAC1B,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDR,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,SAAS,GAAG;MAChB5B,OAAO;MACPE,MAAM;MACNE,UAAU;MACVE,SAAS;MACTE,cAAc;MACdE;IACF,CAAC;IACDK,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEc,SAAS,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,UAAU,GAAIC,MAAM,IAAK;IAC7B7B,UAAU,CAAC6B,MAAM,CAAC9B,OAAO,CAAC;IAC1BG,SAAS,CAAC2B,MAAM,CAAC5B,MAAM,CAAC;IACxBG,aAAa,CAACyB,MAAM,CAAC1B,UAAU,CAAC;IAChCG,YAAY,CAACuB,MAAM,CAACxB,SAAS,CAAC;IAC9BG,iBAAiB,CAACqB,MAAM,CAACtB,cAAc,CAAC;IACxCG,kBAAkB,CAACmB,MAAM,CAACpB,eAAe,CAAC;EAC5C,CAAC;EAED,MAAMqB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMxB,KAAK,CAACqC,IAAI,CAAC,6CAA6C,EAAE;QAC/EhC,OAAO;QACPE,MAAM;QACNE,UAAU;QACVE,SAAS;QACTE,cAAc;QACdE;MACF,CAAC,CAAC;MACF,MAAMuB,WAAW,GAAGd,QAAQ,CAACK,IAAI,CAACS,WAAW,CAACC,OAAO;MACrDb,OAAO,CAACC,GAAG,CAACW,WAAW,CAAC;MACxBpB,uBAAuB,CAACoB,WAAW,CAAC;IACtC,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACE7B,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAAsC,QAAA,gBAGEtC,OAAA;QAAAsC,QAAA,EAAO;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtB1C,OAAA;QAAU2C,KAAK,EAAExC,OAAQ;QAACyC,QAAQ,EAAGC,CAAC,IAAKzC,UAAU,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,WAAW,EAAC;MAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/F1C,OAAA;QAAAsC,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrB1C,OAAA;QAAU2C,KAAK,EAAEtC,MAAO;QAACuC,QAAQ,EAAGC,CAAC,IAAKvC,SAAS,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,WAAW,EAAC;MAAQ;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5F1C,OAAA;QAAAsC,QAAA,EAAO;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzB1C,OAAA;QAAU2C,KAAK,EAAEpC,UAAW;QAACqC,QAAQ,EAAGC,CAAC,IAAKrC,aAAa,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,WAAW,EAAC;MAAY;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxG1C,OAAA;QAAAsC,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxB1C,OAAA;QAAU2C,KAAK,EAAElC,SAAU;QAACmC,QAAQ,EAAGC,CAAC,IAAKnC,YAAY,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,WAAW,EAAC;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG,CAAC,eACN1C,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,EAAO;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9B1C,OAAA;QAAU2C,KAAK,EAAEhC,cAAe;QAACiC,QAAQ,EAAGC,CAAC,IAAKjC,iBAAiB,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,WAAW,EAAC;MAAiB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrH1C,OAAA;QAAAsC,QAAA,EAAO;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/B1C,OAAA;QAAU2C,KAAK,EAAE9B,eAAgB;QAAC+B,QAAQ,EAAGC,CAAC,IAAK/B,kBAAkB,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,WAAW,EAAC;MAAkB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrH,CAAC,eACN1C,OAAA;MAAQgD,OAAO,EAAEd,mBAAoB;MAAAI,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpE1C,OAAA;MAAQgD,OAAO,EAAElB,UAAW;MAAAQ,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjD1C,OAAA;MAAQ4C,QAAQ,EAAGC,CAAC,IAAK;QACvBzB,iBAAiB,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QACjCX,UAAU,CAACiB,IAAI,CAACC,KAAK,CAACL,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAAC;MACxC,CAAE;MAAAL,QAAA,gBACAtC,OAAA;QAAQ2C,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtCzB,OAAO,CAACkC,GAAG,CAAC,CAAClB,MAAM,EAAEmB,KAAK,kBACzBpD,OAAA;QAAoB2C,KAAK,EAAEM,IAAI,CAACI,SAAS,CAACpB,MAAM,CAAE;QAAAK,QAAA,GAAC,SAAO,EAACc,KAAK,GAAG,CAAC;MAAA,GAAvDA,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2D,CAC9E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACT1C,OAAA;MAAAsC,QAAA,EAEGvB,oBAAoB,iBACnBf,OAAA;QAAAsC,QAAA,gBACEtC,OAAA;UAAAsC,QAAA,EAAI;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChC1C,OAAA;UAAAsC,QAAA,EAAIvB;QAAoB;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxC,EAAA,CA5GID,oBAAoB;AAAAqD,EAAA,GAApBrD,oBAAoB;AA8G1B,eAAeA,oBAAoB;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}