{"ast":null,"code":"var _jsxFileName = \"/Users/shintinglin/Desktop/STL/Coding/CV generator/my-cover-letter-app/src/CoverLetterGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios'; // 或其他 HTTP 請求套件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoverLetterGenerator = () => {\n  _s();\n  const [summary, setSummary] = useState('');\n  const [skills, setSkills] = useState('');\n  const [experience, setExperience] = useState('');\n  const [education, setEducation] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n  const [companyProducts, setCompanyProducts] = useState('');\n  const generateCoverLetter = async () => {\n    try {\n      // 將使用者輸入的資訊與公司的工作敘述、產品特色組合成一個 prompt\n      const prompt = `${summary} ${skills} ${experience} ${education} ${jobDescription} ${companyProducts}`;\n\n      // 使用 GPT-3.5 API 來生成求職信\n      const response = await axios.post('https://api.openai.com/v1/generate', {\n        prompt\n        // 其他 GPT-3.5 相關參數\n      }, {\n        headers: {\n          'Authorization': 'Bearer YOUR_OPENAI_API_KEY'\n        }\n      });\n      const generatedCoverLetter = response.data.choices[0].text;\n\n      // 將生成的求職信設定到狀態中\n      // 這裡你可以根據實際需求將生成的結果呈現在介面上或進一步處理\n      console.log(generatedCoverLetter);\n    } catch (error) {\n      console.error('Error generating cover letter:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateCoverLetter,\n      children: \"\\u751F\\u6210\\u6C42\\u8077\\u4FE1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(CoverLetterGenerator, \"bP3nvtP9dJ4t9DC/jvKGWVY63as=\");\n_c = CoverLetterGenerator;\nexport default CoverLetterGenerator;\nvar _c;\n$RefreshReg$(_c, \"CoverLetterGenerator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CoverLetterGenerator","_s","summary","setSummary","skills","setSkills","experience","setExperience","education","setEducation","jobDescription","setJobDescription","companyProducts","setCompanyProducts","generateCoverLetter","prompt","response","post","headers","generatedCoverLetter","data","choices","text","console","log","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shintinglin/Desktop/STL/Coding/CV generator/my-cover-letter-app/src/CoverLetterGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'; // 或其他 HTTP 請求套件\n\nconst CoverLetterGenerator = () => {\n  const [summary, setSummary] = useState('');\n  const [skills, setSkills] = useState('');\n  const [experience, setExperience] = useState('');\n  const [education, setEducation] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n  const [companyProducts, setCompanyProducts] = useState('');\n\n  const generateCoverLetter = async () => {\n    try {\n      // 將使用者輸入的資訊與公司的工作敘述、產品特色組合成一個 prompt\n      const prompt = `${summary} ${skills} ${experience} ${education} ${jobDescription} ${companyProducts}`;\n\n      // 使用 GPT-3.5 API 來生成求職信\n      const response = await axios.post('https://api.openai.com/v1/generate', {\n        prompt,\n        // 其他 GPT-3.5 相關參數\n      }, {\n        headers: {\n          'Authorization': 'Bearer YOUR_OPENAI_API_KEY'\n        }\n      });\n      const generatedCoverLetter = response.data.choices[0].text;\n\n      // 將生成的求職信設定到狀態中\n      // 這裡你可以根據實際需求將生成的結果呈現在介面上或進一步處理\n      console.log(generatedCoverLetter);\n    } catch (error) {\n      console.error('Error generating cover letter:', error);\n    }\n  };\n\n  return (\n    <div>\n      {/* 在這裡加入表單元素，讓使用者輸入相關資訊 */}\n      <button onClick={generateCoverLetter}>生成求職信</button>\n    </div>\n  );\n};\n\nexport default CoverLetterGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMkB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF;MACA,MAAMC,MAAM,GAAI,GAAEb,OAAQ,IAAGE,MAAO,IAAGE,UAAW,IAAGE,SAAU,IAAGE,cAAe,IAAGE,eAAgB,EAAC;;MAErG;MACA,MAAMI,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,oCAAoC,EAAE;QACtEF;QACA;MACF,CAAC,EAAE;QACDG,OAAO,EAAE;UACP,eAAe,EAAE;QACnB;MACF,CAAC,CAAC;MACF,MAAMC,oBAAoB,GAAGH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;;MAE1D;MACA;MACAC,OAAO,CAACC,GAAG,CAACL,oBAAoB,CAAC;IACnC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACE1B,OAAA;IAAA2B,QAAA,eAEE3B,OAAA;MAAQ4B,OAAO,EAAEb,mBAAoB;MAAAY,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAtCID,oBAAoB;AAAAgC,EAAA,GAApBhC,oBAAoB;AAwC1B,eAAeA,oBAAoB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}